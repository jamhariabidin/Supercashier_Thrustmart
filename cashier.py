# -*- coding: utf-8 -*-
"""Super Cashier ThrustMart.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ph2ZFSdxEizuiDI6aVbJMU8Wc919xdh9
"""

from tabulate import tabulate

class Transaction:
  def __init__(self):
      '''
      fungsi menginisialisasi dictionary keranjang belanja
      '''
      self.keranjang=dict()  

  def tambah_barang(self):
      '''
      fungsi menambahkan data item yang akan dimasukkan ke keranjang

      parameter
      nama_barang   : str   nama barang
      qty_barang    : int   jumlah barang
      harga_barang  : int   harga satuan barang
      '''
      
      nama_barang = str(input("Masukkan nama barang: ")).title()
      if nama_barang.isdigit() == False:      
         try:
             qty_barang = int(input("Masukkan qty barang: ")) #check if qty is number
             try:
                harga_barang= int(input("Masukkan harga satuan barang: ")) #check if harga is number
             except:
                 print("Gagal memasukkan harga barang. Harga wajib berupa angka! \nSilakan Coba Lagi")
             else:
                 self.keranjang.update({nama_barang:[qty_barang,harga_barang,qty_barang*harga_barang]})
                 print("Barang berhasil di masukkan ke keranjang!")
                 self.pilihan_menu()                   
         except:
                print("Qty barang wajib berupa angka! \nSilakan Coba Lagi")
      else:
         print("Nama barang wajib berupa text! \nSilakan Coba Lagi")
              
      
  def update_nama_barang(self):
      '''
      fungsi untuk memperbarui data nama barang di record yang sudah ada.
      parameters
      nama_barang   : str   nama barang yang mau diperbarui
      nama_new      : str   data nama barang baru
      '''
      
      nama_barang = input("Masukkan nama barang yang ingin diubah: ").title()
            
      try: #check if theres data in keranjang
          nama_new = input("Masukkan nama barang baru: ").title()
          temp = self.keranjang[nama_barang]
          self.keranjang.pop(nama_barang)
          self.keranjang.update({nama_new: temp})
          self.pilihan_menu()
             
      except: #when theres no data in keranjang
          print("Gagal mengubah item. \nNama item tidak ditemukan! \nSilakan Coba Lagi")

  def update_qty_barang(self):
      '''
      fungsi untuk memperbarui data qty barang di record yang sudah ada.
      parameters
      nama_barang   : str   nama barang dari qty yang mau diperbarui
      qty_new       : int   data qty baru barang yg direvisi
      '''
      nama_barang = input("Masukkan barang yang qty ingin diubah: ").title()
      try: #check if theres data in keranjang
          qty_new = int(input("Masukkan qty barang baru: "))

          self.keranjang[nama_barang][0] = qty_new
          self.keranjang[nama_barang][2] = self.keranjang[nama_barang][0] * self.keranjang[nama_barang][1]
          self.pilihan_menu()
     
      except: #when theres no data in keranjang
          print("Gagal mengubah qty. \nNama item tidak ditemukan! \nSilakan Coba Lagi")

  def update_harga_barang(self):
      '''
      fungsi untuk memperbarui data harga barang di record yang sudah ada.
      parameters
      nama_barang     : str   nama barang dari harga yang mau diperbarui
      harga_new       : int   data harga baru barang yg direvisi
      '''
      nama_barang = input("Masukkan barang yang harganya ingin diubah: ").title()
      try: #check if theres data in keranjang
          harga_new = int(input("Masukkan harga barang baru: "))

          self.keranjang[nama_barang][1] = harga_new
          self.keranjang[nama_barang][2] = self.keranjang[nama_barang][0] * self.keranjang[nama_barang][1]
          self.pilihan_menu()
      except: #when theres no data in keranjang
          print("Gagal mengubah harga. \nNama item tidak ditemukan! \nSilakan Coba Lagi")

  def delete_barang(self):
      '''
      fungsi untuk menghapus data nama barang dalam keranjang
      '''
      nama_barang = input("Masukkan nama barang yang ingin di hapus: ").title()
      try:
          del self.keranjang[nama_barang]
          self.pilihan_menu()
      except:
          print("Gagal menghapus item. \nNama item tidak ditemukan.\n")

  def reset_keranjang(self):
      '''
      method untuk menghapus seluruh barang yang sudah di input di keranjang (reset)
      '''
      self.keranjang.clear()
      print("Keranjang berhasil dikosongkan! \nSemua item berhasil dihapus\n ")
      self.pilihan_menu()

  def check_keranjang(self):
      '''
      method untuk menampilkan barang/ item yang sudah diinput dan akan dibeli
      '''
      if (len(self.keranjang) == 0):
          print('Keranjang Belanja Anda Kosong') #menampilkan pesan ketika tidak ada barang di keranjang

      else:
            '''
            menampikan keranjang berisi barang yang sudah di input dengan tabulate
            '''
            tabel_keranjang = []
            headers = ['No','Nama Barang','Qty Barang', 'Harga Satuan', 'Jumlah']
            tabel_keranjang.append(headers)

            n = 0
            
            for key, value in self.keranjang.items():
                n+=1
                table_no = n
                nama_barang = key
                qty_barang = value[0]
                harga_barang = value[1]
                jumlah_harga = value[2]
                
                item_data = [table_no, nama_barang, qty_barang, harga_barang, jumlah_harga]

                tabel_keranjang.append(item_data)
            
            print(tabulate(tabel_keranjang, headers="firstrow"))
            

  def check_out(self):
      '''
      method untuk mengecek apakah inputan pada keranjang sudah sesuai. bisa dilakukan sebelum pembayaran.
      '''
      for key, value in self.keranjang.items():
        nama_barang = key
        qty_barang = value[0]
        harga_barang = value[1]
        jumlah_harga = value[2]
    
      if type(nama_barang) == str and type (qty_barang) == int and type(harga_barang) == int:
          print(f"Data yang Anda masukkan sudah benar [\u2713] \nBerikut keranjang Anda, periksa sebelum membayar!")      
          self.pilihan_menu()

      else:
          print(f"'\u2715': Data yang dimasukkan tidak sesuai. \nSilakan input data ulang!")
        
  def total_belanja(self):
      '''
      method untuk menghitung total belanja
      dimungkinkan untuk mendapatkan diskon jika value is_discounted bernilai True
      besar diskon dihitung pada method lain
      '''
      self.total_belanja = 0
      for value in self.keranjang.values():
          qty_barang = value [0]
          harga_barang = value [1]
          self.total_belanja += (qty_barang*harga_barang)
            
      is_discounted, discount = self.is_discounted(self.total_belanja)
      self.final_price = self.total_belanja * (1-discount)

      if is_discounted == True:
         print(f'Total belanjaan Anda sebesar Rp {self.total_belanja:,}.')
         print(f'Selamat! Anda mendapatkan diskon sebesar {discount*100}%.')
         print(f'Total harga setelah potongan diskon sebesar Rp {self.final_price:,}.')

      else:
           print(f'Total belanjaan Anda sebesar Rp {self.total_belanja:,}.')
           print("Anda akan mendapatkan potongan harga/ diskon jika belanja lebih dari Rp 200.000")
    
   
  def is_discounted(self, total_belanja):
        '''
        method untuk menghitung besaran diskon yang didapatkan oleh user
         '''
        self.total_belanja = total_belanja
        #mendapat tidak mendapat diskon belanja <200_000
        if self.total_belanja <= 200_000:
           is_discounted = False
           discount = 0.0
        
        else:
           is_discounted = True
           #mendapat diskon 10% jika belanja >500_000
           if self.total_belanja > 500_000: 
              discount = 0.1
              #mendapat diskon 8% jika belanja >300_000
           elif self.total_belanja > 300_000:
              discount = 0.08
              #mendapat diskon 5% jika belanja >200_000
           elif self.total_belanja > 200_000:
              discount = 0.05

        return is_discounted, discount


  def pilihan_menu(self):
      print('-'*44)
      print("Keranjang Anda: ")
      self.check_keranjang()
      print('-'*44)

      list_menu = {"1": self.tambah_barang,
                   "2": self.update_qty_barang,
                   "3": self.update_harga_barang,
                   "4": self.delete_barang,
                   "5": self.reset_keranjang,
                   "6": self.check_out,
                   "7": self.total_belanja,
                  }
      input_pilihan = input ('Pilih Menu Transaksi yang diinginkan: \n1.Tambah Barang \n2.Update Jumlah Barang \n3.Update Harga Barang \n4.Delete Barang \n5.Reset Keranjang \n6.Check Out Keranjang \n7.Total Bayar \nKetik disini: ')
      if input_pilihan in list_menu:
         pass
      else:
        print("Tidak ada di pilihan, silakan input ulang!")
        self.pilihan_menu()
      return list_menu[input_pilihan]()